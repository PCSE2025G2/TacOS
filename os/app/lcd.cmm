/*
 * lcd.cmm : 液晶ディスプレイのドライバ
 *
 * 2020.08.23 : spitestの一部から組み込み用に転用
 * 2019.08.26 : 液晶の上下をもとに戻す．リセット機能を util.cmm に移動する．
 * 2019.08.18 : 液晶の上下を逆にする
 * 2019.08.09 : 新規作成
 *
 * $Id$
 *
 */

#include "spi.hmm"
#include "font.hmm"
#include "lcd.hmm"

char[] locateCom = { '\xb0',   // page address
                     '\x10',   // column address Hi = 0x00
                     '\x00',   // column address Lo = 0x00
                     '\xff' }; // EOF

// 液晶上でカーソルを(x,y)に移動
public void locateXY(int x, int y) {
  int x8 = x * 8;
  locateCom[0] = chr(0xb0 | y);             // page address
  locateCom[1] = chr(0x10 | (x8>>4));       // column address Hi
  locateCom[2] = chr(0x00 + (x8 & 0x0f));   // column address Lo
  spiWriteLcdCom(locateCom);
}

// カーソル位置に１文字表示
public void putCh(char c, int currentFont) {
  spiWriteLcdDat(font(c, currentFont), 8);
}

// カーソル位置に文字列表示
public void putStr(char[] str, int currentFont) {
  for (int i=0; str[i]!='\0'; i=i+1) {
    putCh(str[i], currentFont);
  }
}

// カーソル位置に桁数を指定して右詰めで10進数を表示
char[] decBuf = array(6);                   // 16bit int なら最大5桁
public void putDec(int val, int width, int currentFont) {
  int v = val;
  int w = 1;
  if (v==0) {
    decBuf[0]='0';
  } else {
    for (w=0; v!=0; w=w+1) {
      decBuf[w]=chr((v % 10) + ord('0'));
      v = v / 10;
    }
  }
  for (int i=w; i<width; i=i+1) {           // 空白で桁数を合わせる
    putCh(' ', currentFont);
  }
  for (w=w-1; w>=0; w=w-1) {
    putCh(decBuf[w], currentFont);
  }
}

public void cls(int currentFont) {
  for (int i=0; i<8; i=i+1) {
    locateXY(0, i);
    for (int j=0; j<16; j=j+1) {
      putCh(' ', currentFont);
    }
  }
}