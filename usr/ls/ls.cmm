/*
 * TacOS Source Code
 *    Tokuyama kousen Advanced educational Computer.
 *
 * Copyright (C) 2016-2020 by
 *                      Dept. of Computer Science and Electronic Engineering,
 *                      Tokuyama College of Technology, JAPAN
 *
 *   上記著作権者は，Free Software Foundation によって公開されている GNU 一般公
 * 衆利用許諾契約書バージョン２に記述されている条件を満たす場合に限り，本ソース
 * コード(本ソースコードを改変したものを含む．以下同様)を使用・複製・改変・再配
 * 布することを無償で許諾する．
 *
 *   本ソースコードは＊全くの無保証＊で提供されるものである。上記著作権者および
 * 関連機関・個人は本ソースコードに関して，その適用可能性も含めて，いかなる保証
 * も行わない．また，本ソースコードの利用により直接的または間接的に生じたいかな
 * る損害に関しても，その責任を負わない．
 *
 *
 */

/*
 * ls/ls.cmm : ls プログラム
 *
 * 2020.07.15 : 単独ファイルの表示を可能に
 * 2016.03.07 : 新規作成
 *
 * $Id$
 *
 */

#include <crt0.hmm>
#include <stdio.hmm>
#include <stdlib.hmm>
#include <syslib.hmm>
#include <string.hmm>
#include <ctype.hmm>

// 32ビット整数
int[] fLen = array(2);

// ファイル名の8または3文字を表示する
int printFname(char[] fname, int l, int n) {
  char c;
  for (int i=0; i<n; i=i+1) {
     c = fname[l];
     if (c!='.' && c!='\0') {
       printf("%c", toUpper(c));
       l = l + 1;
     } else {
       printf(" ");
     }
  }
  if (c=='.') l = l + 1;
  return l;
}

// ファイルを一つ表示する
void printLine(char[] fname, int attr, int clst, int[] fLen) {
  int l = printFname(fname, 0, 8);
  printf(".");
  printFname(fname, l, 3);
  printf(" 0x%02x %4d %9ld\n", attr, clst, fLen);
}

// ディレクトリの一覧を表示する
Dir dir = {null, 0, 0, 0, 0 };                  // ディレクトリの読出しバッファ
char[] nbuf = array(12);
int printDir(char[] fname) {
  int fd = open(fname, O_RDONLY);               // ディレクトリを開く
  if (fd<0) {
    perror(fname);
    return 1;
  }

  printf("FileName.Ext Attr Clst FileLength\n");
  dir.name = nbuf;
  while (readDir(fd, dir)>0) {                  // ファイルが続く間
    fLen[0]=dir.lenH;
    fLen[1]=dir.lenL;
    printLine(dir.name, dir.attr, dir.clst, fLen);
  }
  close(fd);
  return 0;
}

Stat sta =  {0,0,0,0};
public int main(int argc, char[][] argv) {
  int err = 0;
  if  (argc==1) {                               // 特に指定がなければ
    err = printDir(".");                        //   カレントディレクトリ
  } else {
    for (int i=1; i<argc; i=i+1) {
      if (stat(argv[i], sta)<0) {               // パスが示すものを調べる
        perror(argv[i]);
        err = 1;
      } else if ((sta.attr&0x10)!=0) {          // ディレクトリなら
        if (argc>2) printf("%s:\n", argv[i]);   //   ディレクトリ名表示
        err = err | printDir(argv[i]);          //   ディレクトリ内部表示
      } else {                                  // ファイルなら
        char[] s = argv[i];
        int l = strRchr(s, '/');
        if (l>=0) s = _addrAdd(s, l+1);
        fLen[0] = sta.lenH;
        fLen[1] = sta.lenL;
        printLine(s, sta.attr, sta.clst, fLen);
      }
    }
  }
  return err;
}
